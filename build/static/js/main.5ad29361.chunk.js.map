{"version":3,"sources":["assets/images/profile-pic.jpeg","components/Timeline/Timeline.js","utils/resumeData.js","components/Button/Button.js","components/Profile/Profile.js","components/Header/Header.js","components/Footer/Footer.js","pages/Portfolio/Portfolio.js","pages/Resume/Resume.js","App.js","reportWebVitals.js","index.js"],"names":["CostomTimelineSeparator","TimelineSeparator","className","TimelineDot","variant","TimelineConnector","CostomTimeline","title","icon","children","Timeline","TimelineItem","TimelineContent","Typography","name","birthday","email","address","phone","socials","Facebook","link","text","Twitter","LinkedIn","GitHub","about","Experiences","date","description","Education","services","AssignmentOutlined","WebOutlined","skills","projects","tag","image","caption","links","Language","CostomButton","Button","endIcon","CostomTimelineItem","href","target","Portfolio","resumeData","src","myImage","alt","Object","keys","map","key","style","display","withRouter","props","pathName","location","pathname","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","Toggle","Collapse","Telegram","Footer","traget","useState","tabValue","setTabValue","projectDialog","setProjectDialog","Grid","container","spacing","item","xs","Tabs","value","indicatorColor","onChange","event","newValue","Tab","label","Set","md","sm","Grow","in","timeout","Card","onClick","CardActionArea","CardMedia","CardContent","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","height","DialogActions","Resume","justify","service","Icon","skill","Paper","elevation","element","lg","TextField","multiline","rows","App","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad29361.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-pic.f6c8d88d.jpeg\";","import React, { Children } from \"react\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport WorkIcon from \"@material-ui/icons/Work\";\n\nimport \"./Timeline.css\";\nimport { Typography } from \"@material-ui/core\";\n\nconst CostomTimeline = ({ title, icon, children }) => {\n  return (\n    <Timeline className={\"timeline\"}>\n      {/*Item Header */}\n      <TimelineItem className={\"timeline_firstitem\"}>\n        <TimelineSeparator>\n          <TimelineDot className={\"timeline_dot_header\"}>{icon}</TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Typography variant=\"h6\" className={\"timeline_header\"}>\n            {title}\n          </Typography>\n        </TimelineContent>\n      </TimelineItem>\n      {children}\n    </Timeline>\n  );\n};\n\nexport const CostomTimelineSeparator = () => (\n  <TimelineSeparator className={\"separator_padding\"}>\n    <TimelineDot variant={\"outlined\"} className={\"timeline_dot\"} />\n    <TimelineConnector />\n  </TimelineSeparator>\n);\n\nexport default CostomTimeline;\n","import {\n  AssignmentOutlined,\n  Facebook,\n  Language,\n  WebOutlined,\n} from \"@material-ui/icons\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { Image } from \"react-bootstrap\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  name: \"Fernan Cetina\",\n  title: \"Undergraduate\",\n  birthday: \"16th November 2001\",\n  email: \"nikilafern99@gmail.com\",\n  address: \"Mérida, Yucatán, México\",\n  phone: \"+529991222819\",\n\n  socials: {\n    Facebook: {\n      link: \"https://www.facebook.com/nikila.gimhan/\",\n      text: \"My Facebook\",\n      icon: <Facebook />,\n    },\n    Twitter: {\n      link: \"https://twitter.com/NikilaFernando\",\n      text: \"My Twitter\",\n      icon: <TwitterIcon />,\n    },\n    LinkedIn: {\n      link: \"www.linkedin.com/in/fernan-cetina-564472234\",\n      text: \"My LinkedIN\",\n      icon: <LinkedInIcon />,\n    },\n    GitHub: {\n      link:\n        \"https://github.com/FernanCetinaE?tab=repositories\",\n      text: \"My Github\",\n      icon: <GitHubIcon />,\n    },\n  },\n\n  about:\n    \"Hi! My name is Fernan Cetina, I am an experienced Product owner and full stack developer\",\n\n  Experiences: [\n    {\n      title: \"Full stack developer | MID Software\",\n      date: \"Oct 2023 - Present\",\n      description:\n        \"Working as a developer to build fast and reliable web applications using React, Django, and Postgresql.\",\n    },\n    {\n      title: \"Brand Ambassador | Dealer Geek\",\n      date: \" May 2022  - Oct 2023\",\n      description:\n        \"Implemented SCRUM framework, used JIRA for Daily Standups and documentation, increased accountability and traceability for User Stories. As a developer I worked with recent frameworks and technologies to develop several applications for car dealerships\",\n    },\n    {\n      title: \"Freelance Web Developer\",\n      date: \"May 2020 - May 2022\",\n      description:\n        \"Worked with clients to create websites that met their specifications. Used HTML, CSS, and JavaScript to create responsive websites for clients.\",\n    },\n  ],\n  Education: [\n    {\n      title: \"Software Engineering | Universidad Autónoma de Yucatán\",\n      date: \"2020 - December 2024\",\n      description:\n        \"GPA 3.8 | Activities and societies  : Workshop\",\n    },\n    {\n      title: \"Academic Research | Notre Dame University\",\n      date: \"Summer 2023\",\n      description:\n        \"Work with GCC, Python and Docker to mine information of relay connection times within Tor's network.\"\n    } \n         \n  ],\n  services: [\n    {\n      title: \"Web development\",\n      description: \"Develop and deploy a webapp according to your needs\",\n      icon: <AssignmentOutlined />,\n    },\n    {\n      title: \"Bussiness Tech Analysis\",\n      description: \"Requirements gathering, analysis and documentation\",\n      icon: <WebOutlined />,\n    }\n  ],\n\n  skills: [\n    {\n      title: \"Front End\",\n      description: [\n        \"ReactJs\",\n        \"JavaScript/TypeScript\",\n        \"Bootstrap\",\n        \"TailWind\",\n        \"Material UI\",\n        \"HTML/CSS\",\n      ],\n    },\n    {\n      title: \"Back END\",\n      description: [\"Node JS\", \"Python\"],\n    },\n    {\n      title: \"DataBases\",\n      description: [\"PostgreSql\",\"MongoDB\"],\n    },\n    {\n      title: \"Version Control\",\n      description: [\"Git\", \"Git Hub\", \"GitLab\"],\n    },\n  ],\n\n  projects: [\n    {\n      tag: \"React\",\n      image:\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/React.svg/1200px-React.svg.png\",\n      title: \"Gas monitoring system\",\n      caption: \"App to monitor spending on gas by salespeople\",\n      description: \"This is dummy project description. Please fill it in \",\n      links: [\n        { link: \"https://www.google.com\", icon: <Language /> },\n        { link: \"https://github.com/Nikila99gimhan\", icon: <GitHubIcon /> },\n      ],\n    },\n    {\n      tag: \"Python\",\n      image:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Python.svg/1200px-Python.svg.png\",\n      title: \"Tor Network Analysis\",\n      caption: \"Build algorithms to analyze Tor's network\",\n      description: \"This is dummy project description. Please fill it in \",\n      links: [\n        { link: \"https://www.google.com\", icon: <Language /> },\n        { link: \"https://github.com/Nikila99gimhan\", icon: <GitHubIcon /> },\n      ],\n    },\n    {\n      tag: \"Angular\",\n      image:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/800px-Angular_full_color_logo.svg.png\",\n      title: \"Wait-time display application\",\n      caption: \"Webapp to display wait times in dealerships\",\n      description: \"This is dummy project description. Please fill it in \",\n      links: [\n        { link: \"https://www.google.com\", icon: <Language /> },\n        { link: \"https://github.com/Nikila99gimhan\", icon: <GitHubIcon /> },\n      ],\n    },\n  ],\n};\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nimport \"./Button.css\";\n\nconst CostomButton = ({ text, icon }) => {\n  return (\n    <Button\n      className=\"costom_btn\"\n      endIcon={icon ? <div className=\"btn_icon_container\">{icon}</div> : null}\n    >\n      <span className=\"btn-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default CostomButton;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport myImage from \"../../assets/images/profile-pic.jpeg\";\nimport CostomTimeline, { CostomTimelineSeparator } from \"../Timeline/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport resumeData from \"../../utils/resumeData\";\nimport PersonOutlineOutLinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\nimport \"./Profile.css\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport CostomButton from \"../Button/Button\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nconst CostomTimelineItem = ({ title, text, link }) => (\n  <TimelineItem>\n    <CostomTimelineSeparator />\n    <TimelineContent className=\"timeline_content\">\n      {link ? (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>{\" \"}\n          <a href={link} target=\"_blank\">\n            {text}\n          </a>\n        </Typography>\n      ) : (\n        <Typography className=\"timelineItem_text\">\n          <span>{title}:</span>\n          {text}\n        </Typography>\n      )}\n    </TimelineContent>\n  </TimelineItem>\n);\n\nconst Portfolio = () => {\n  return (\n    <div className=\"profile container_shadow\">\n      <div className=\"profile_name\">\n        <Typography className=\"name\">{resumeData.name}</Typography>\n        <Typography className=\"title\">{resumeData.title}</Typography>\n      </div>\n      <figure className=\"profile_image\">\n        <img src={myImage} alt=\"\" />\n      </figure>\n      <div className=\"profile_information\">\n        <CostomTimeline icon={<PersonOutlineOutLinedIcon />}>\n          <CostomTimelineItem title=\"Name\" text={resumeData.name} />\n          <CostomTimelineItem title=\"Title\" text={resumeData.title} />\n          <CostomTimelineItem\n            className=\"special_fontsize\"\n            title=\"Email\"\n            text={resumeData.email}\n          />\n\n          {Object.keys(resumeData.socials).map((key) => (\n            <CostomTimelineItem\n              title={key}\n              text={resumeData.socials[key].text}\n              link={resumeData.socials[key].link}\n            />\n          ))}\n        </CostomTimeline>\n        <div className=\"button_container\" style={{ display: \"flex\" }}>\n          <CostomButton text={\"Download CV\"} icon={<GetAppIcon />} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, Form, FormControl, Nav, Navbar, NavbarBrand, NavDropdown} from \"react-bootstrap\";\nimport{Link,NavLink,withRouter} from \"react-router-dom\";\nimport {HomeRounded, Telegram} from \"@material-ui/icons\";\nimport resumeData from \"../../utils/resumeData\";\nimport CostomButton from \"../Button/Button\";\nimport \"./Header.css\";\n\n\n\n\nconst Header = (props) => {\n  const pathName = props?.location?.pathname;\n  return(\n      <Navbar expand=\"lg\" sticky={\"top\"} className={\"header\"}>\n        {/* Home link */}\n        <Nav.Link as={NavLink} to='/' className='header_navlink'>\n        <Navbar.Brand className={\"header_home\"}>\n          <HomeRounded />\n        </Navbar.Brand>\n        </Nav.Link>\n        <Navbar.Toggle />\n        <Navbar.Collapse>\n          <Nav className={'header_left'}>\n            {/* Resume Link */}\n            <Nav.Link as={NavLink} to='/' className={pathName == \"/\" ? \"header_link_active\" : \"header_link\"}>\n              Resume\n            </Nav.Link>\n\n            {/* Portfolio Link */}\n            <Nav.Link as={NavLink} to='/portfolio' className={pathName == \"/portfolio\" ? \"header_link_active\" : \"header_link\"}>\n              Portfolio\n            </Nav.Link>\n          </Nav>\n\n          <div className={'header_right'}>\n            {Object.keys(resumeData.socials).map(key =>(\n                <a href={resumeData.socials[key].link} target=\"_blank\">\n                  {resumeData.socials[key].icon}\n                </a>\n            ))}\n            <CostomButton text={\"Hire Me\"} icon={<Telegram />} />\n          </div>\n        </Navbar.Collapse>\n\n\n      </Navbar>\n  );\n};\nexport default withRouter(Header);","import React from \"react\";\nimport \"./Footer.css\"\nimport {Typography} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\n\nconst Footer = () => {\n  return (\n      <di className=\"footer\">\n        <div className=\"footer_left\">\n          <Typography className=\"footer_name\">{resumeData.name}</Typography>\n        </div>\n        <div className=\"footer_right\">\n          <Typography className=\"footer_copyright\">\n            Designed and Developed by <a href=\"https://www.linkedin.com/in/nikila-fernando-47ba811b0/\" traget='_blank'>Nikila Fernando</a>\n            <br />\n              Clone idea from <a href=\"http://tavonline.net/html/mat/default/index.html#\" target='_blank'>Travonline</a>.\n          </Typography>\n\n        </div>\n\n      </di>\n  )\n};\n\nexport default Footer;\n","import React, {useState} from \"react\";\nimport './Portfolio.css'\nimport {\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Dialog, DialogActions, DialogContent,\n    DialogTitle,\n    Grid,\n    Grow,\n    Tab,\n    Tabs,\n    Typography\n} from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nimport {Card} from \"react-bootstrap\";\nimport ImageGallery from 'react-image-gallery';\n\nconst Portfolio = () => {\n\n    const [tabValue,setTabValue] = useState('All')\n    const [projectDialog,setProjectDialog] =useState(false)\n\n\n\n\n  return (\n      <Grid container spacing={1} className={'section pb_45 pt_45'}>\n        <Grid item className={'section_title mb-20'}>\n          <span></span>\n          <h6 className={'section_title_text'}>Portfolio </h6>\n        </Grid>\n\n\n        {/*Tabs */}\n        <Grid item xs={12} >\n            <Tabs value={tabValue} indicatorColor={\"white\"} className={'customTabs'} onChange={(event,newValue) => setTabValue(newValue)}>\n                <Tab label={\"All\"} value={\"All\"} className={tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"}/>\n\n                {[...new Set(resumeData.projects.map((item) => item.tag))].map(\n                    (tag) => (\n                        <Tab label={tag} value={tag} className={tabValue == tag ? \"customTabs_item active\" : \"customTabs_item\"} />\n                    )\n                )}\n\n\n            </Tabs>\n\n        </Grid>\n\n          {/* Projects */}\n         \n              <Grid container spacing={3}  >\n                  {resumeData.projects.map(projects => (\n                      <>\n                          {tabValue == projects.tag || tabValue == 'All' ? (\n                              <Grid item  md={4} sm={6}  xs={12}>\n                                  <Grow in timeout={1000}>\n                                      <Card className={'customCard'} onClick={() => setProjectDialog(projects)}>\n                                          <CardActionArea>\n                                              <CardMedia className={'customCard_image'} image={projects.image} title={projects.title} />\n                                              <CardContent>\n                                                  <Typography variant={\"body2\"} className={'customCard_title'}>{projects.title}</Typography>\n                                                  <Typography variant={\"caption\"} className={'customCard_caption'}>{projects.caption}</Typography>\n                                              </CardContent>\n                                          </CardActionArea>\n                                      </Card>\n                                  </Grow>\n                              </Grid>\n\n                              ) : null}\n                      </>\n\n\n\n                  ))}\n              \n          </Grid>\n          <Dialog open={projectDialog} onClose={() => setProjectDialog(false) } className={'projectDialog'} maxWidth={\"lg\"} fullWidth>\n              <DialogTitle onClose={() => setProjectDialog(false)}>{projectDialog.title}</DialogTitle>\n\n              \n              <DialogContent style={{ height:\"80hv\"}}>\n                  {projectDialog.image && (\n                      <ImageGallery image={projectDialog.image}/>\n                  )}\n                  <Typography className={'projectDialog_description'}>{projectDialog.description}</Typography>\n              </DialogContent>\n              <DialogActions className={'projectDialog_actions'}>\n                  {projectDialog?.links?.map(link => (\n                      <a href={link.link} target={'_blank'} className={'projectDialog_icon'}>{link.icon}</a>\n                  ))}\n              </DialogActions>\n          </Dialog>\n      </Grid>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport \"./Resume.css\";\nimport { Grid, Icon, Paper, TextField, Typography } from \"@material-ui/core\";\nimport resumeData from \"../../utils/resumeData\";\nimport CostomTimeline, {\n  CostomTimelineSeparator,\n} from \"../../components/Timeline/Timeline\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport SchoolIcon from \"@material-ui/icons/School\";\n\nimport {\n  TimelineContent,\n  TimelineDot,\n  TimelineItem,\n  TimelineSeparator,\n} from \"@material-ui/lab\";\nimport CostomButton from \"../../components/Button/Button\";\n\nconst Resume = () => {\n  return (\n    <>\n      {/* About me*/}\n\n      <Grid container className=\"section pb_45 pt_45 \">\n        <Grid item className=\"section_title mb-30\">\n          <span></span>\n          <h6 className={\"section_title_text\"}>About Me </h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant={\"body2\"} className={\"aboutme_text\"}>\n            {resumeData.about}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {/* Educational And Experiences*/}\n      <Grid container className=\"section pb_45\">\n        <Grid item className=\"section_title mb-30\">\n          <span></span>\n          <h6 className={\"section_title_text\"}>Resume </h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container className={\"resume_timeline\"}>\n            {/*Working and Volunteering Experiences  */}\n            <Grid item sm={12} md={6}>\n              <CostomTimeline\n                title={\"Work\"}\n                icon={<WorkIcon />}\n              >\n                {resumeData.Experiences.map((Experiences) => (\n                  <TimelineItem>\n                    <CostomTimelineSeparator />\n                    <TimelineContent className={\"timeline_content\"}>\n                      <Typography className={\"timeline_title\"}>\n                        {Experiences.title}\n                      </Typography>\n                      <Typography\n                        variant={\"caption\"}\n                        className={\"timeline_date\"}\n                      >\n                        {Experiences.date}\n                      </Typography>\n                      <Typography\n                        variant={\"body2\"}\n                        className={\"timeline_description\"}\n                      >\n                        {Experiences.description}\n                      </Typography>\n                    </TimelineContent>\n                  </TimelineItem>\n                ))}\n              </CostomTimeline>\n            </Grid>\n\n            {/*Educational*/}\n            <Grid item sm={12} md={6}>\n              <CostomTimeline title={\"Education\"} icon={<SchoolIcon />}>\n                {resumeData.Education.map((Education) => (\n                  <TimelineItem>\n                    <CostomTimelineSeparator />\n                    <TimelineContent className={\"timeline_content\"}>\n                      <Typography className={\"timeline_title\"}>\n                        {Education.title}\n                      </Typography>\n                      <Typography\n                        variant={\"caption\"}\n                        className={\"timeline_date\"}\n                      >\n                        {Education.date}\n                      </Typography>\n                      <Typography\n                        variant={\"body2\"}\n                        className={\"timeline_description\"}\n                      >\n                        {Education.description}\n                      </Typography>\n                    </TimelineContent>\n                  </TimelineItem>\n                ))}\n              </CostomTimeline>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* Services*/}\n\n      <Grid container className=\"section pb_45\">\n        <Grid item className=\"section_title mb-30\">\n          <span></span>\n          <h6 className={\"section_title_text\"}>My Services </h6>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={3} justify={\"space-around\"}>\n            {resumeData.services.map((service) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <div className={\"service\"}>\n                  <Icon className={\"service_icon\"}>{service.icon}</Icon>\n                  <Typography className={\"service_title\"} variant={\"h6\"}>\n                    {service.title}\n                  </Typography>\n                  <Typography\n                    className={\"service_description\"}\n                    variant={\"body2\"}\n                  >\n                    {service.description}\n                  </Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/*Skills*/}\n\n      <Grid container className=\"section graybg pb_45 p_50 \">\n        <Grid item xs={12}>\n          <Grid container justify={\"space-between\"} spacing={3}>\n            {resumeData.skills.map((skill) => (\n              <Grid item xs={12} sm={6} md={3}>\n                <Paper elevation={0} className={\"skill\"}>\n                  <Typography variant={\"h6\"} className={\"skills_title\"}>\n                    {skill.title}\n                  </Typography>\n                  {skill.description.map((element) => (\n                    <Typography\n                      variant={\"body2\"}\n                      className={\"skill_description\"}\n                    >\n                      <TimelineDot\n                        variant={\"outlined\"}\n                        className={\"timeline_dot\"}\n                      />\n                      {element}\n                    </Typography>\n                  ))}\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/*Contact*/}\n\n      <Grid container spacing={6} className=\"section pt_45 pb_45\">\n        {/* Content  form*/}\n        <Grid item xs={12} lg={7}>\n          <Grid container>\n            <Grid item className=\"section_title mb-30\">\n              <span></span>\n              <h6 className={\"section_title_text\"}>Contact Form </h6>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField fullWidth name={\"name\"} label={\"Name\"} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField fullWidth name={\"email\"} label={\"E-mail\"} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    fullWidth\n                    name={\"massage\"}\n                    label={\"Massage \"}\n                    multiline\n                    rows={4}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <CostomButton text={\"Submit\"} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* Content  information*/}\n        <Grid item xs={12} lg={5}>\n          <Grid container>\n            <Grid item className=\"section_title mb-30\">\n              <span></span>\n              <h6 className={\"section_title_text\"}>Contact Information </h6>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container >\n                <Grid item xs={12}>\n                  <Typography className={\"contactInfo_item\"}>\n                    <span>Address :</span>\n                    {resumeData.address}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className={\"contactInfo_item\"}>\n                    <span>Phone :</span>\n                    {resumeData.phone}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className={\"contactInfo_item\"}>\n                    <span>Email :</span>\n                    {resumeData.email}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container className={\"contactInfo_socialContainer\"}>\n                {Object.keys(resumeData.socials).map((key) => (\n                  <Grid item className={'contactInfo_social'}>\n                    <a href={resumeData.socials[key].link}>\n                      {resumeData.socials[key].icon}\n                    </a>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Portfolio from \"./pages/Portfolio/Portfolio\";\nimport Resume from \"./pages/Resume/Resume\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Container className={\"top_60\"}>\n      <Grid container spacing={7}>\n        <Grid item xs={12} sm={12} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs >\n          <Router>\n          <Header />\n          <diV className=\"main_content container_shadow\">\n            <Switch>\n              <Route path=\"/portfolio\">\n                <Portfolio />\n              </Route>\n              <Route path=\"/\">\n                <Resume />\n              </Route>\n            </Switch>\n          </diV>\n\n          </Router>\n\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}